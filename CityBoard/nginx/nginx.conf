#user http;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
#       more_set_headers 'Server: CityBoard';
    log_format  main  '$upstr$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  balancer '$upstream_addr $upstr $request_method $request $status';
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    upstream apirw {
        #server 127.0.0.1:10077;
        server 192.168.3.79:10077;
}
    upstream apiro {
        #server 127.0.0.1:10077 weight=4;
        #server 127.0.0.1:10178 weight=2;
        #server 127.0.0.1:10177 weight=2;
        server 192.168.3.79:10077 weight=4;
        server 192.168.3.79:10177 weight=2;
        server 192.168.3.79:10178 weight=2;
#       server 127.0.0.1:8888;
}
#    upstream legacy {
#        server 127.0.0.1:10277;
#    }
#    upstream mirror1 {
#       server 127.0.0.1:10377;
#       server 127.0.0.1:8888;
#    }

    map $request_method $upstr {
        GET     apiro;
        default apirw;
    }

    server {
        listen 8888 default_server;
        server_name cityboard;
        access_log logs/ust.a.l main;
        location / {
            root   /srv/http/site;
            index  main.html;
        }

    }
    server {
        listen       80 default_server;
        server_name  cityboard;


        #charset koi8-r;

        access_log  logs/host.access.log  main;
        access_log  logs/balancer.access.log  balancer;
        error_log  logs/host.error.log;


        location = /status {
        stub_status;
    }
#        location /mirror1/ {
#        rewrite ^/mirror1/api/v2$ /mirror1/api/v2/;
#        rewrite ^/mirror1/api/v2/$ /mirror1/api/v2/index.html ;
#        rewrite ^/mirror1/api/v2/(.*)$ /swagger-ui/$1 break;

#        rewrite ^/mirror1/api/v1/(.*)$ /$1 break;
#        proxy_pass http://mirror1;
#        }

#        location  /legacy/ {
#        rewrite ^/legacy/api/v2/$ /legacy/api/v2/index.html ;
#        rewrite ^/legacy/api/v2/(.*)$ /legacy/swagger-ui/$1 break;
#        proxy_pass http://legacy/;
#        }

#        location  /admin/ {
#            proxy_pass http://unix:/tmp/pgadmin4.sock;
#            proxy_set_header X-Script-Name /admin;
#        }
        
        location  /api/v1/ {
            rewrite ^/api/v1/(.*)$ /$1 break;
            proxy_pass http://$upstr;
#proxy_pass http://apirw/ ;
#proxy_pass http://127.0.0.1:10077/;
        }
        
        location  /api/v2/ {
            rewrite ^/api/v2/$ /api/v2/index.html ;
            rewrite ^/api/v2/(.*)$ /swagger-ui/$1 break;

            proxy_pass http://$upstr;
            #proxy_pass http://apirw/swagger-ui/ ;
            #proxy_pass http://127.0.0.1:10077/swagger-ui/;
        }
        location  /v3/ {
            proxy_pass http://$upstr;
#proxy_pass http://apirw/v3/ ;
#proxy_pass http://127.0.0.1:10077/v3/;
        }
        
#location  /api/v1/ {
#proxy_set_header Host $host;
#proxy_set_header X-Real-IP $remote_addr;
#proxy_pass http://127.0.0.1:10077/swagger-ui/;
#}
    
        #rewrite ^/test(.*)$ /$1 ;
        
        #location / {
        #    root   /srv/http/site;
        #    index  main.html;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
#        listen       443 ssl http3 reuseport;
        listen       443 ssl http2;
        server_name  cityboard;

        ssl_certificate      cityboard.crt;
        ssl_certificate_key  cityboard.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        access_log  logs/hostS.access.log  main;
        error_log  logs/hostS.error.log;
        location / {
            root   /srv/http/site;
            http2_push /static/s.css;
            index  main.html;
        }
    }

}
